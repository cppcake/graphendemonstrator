// Add the new data to the end of the array\ntree_array.push_back(data);\n\n// Move it up (if needed)\nint index = tree_array.size() - 1;\nwhile (index > 0 && tree_array[lb]index] > tree_array[lb]parent(index)]) {\n\tstd::swap(tree_array[lb]index], tree_array[lb]parent(index)]);\n\tindex = parent(index);\n}\n\nreturn\n\n--------------------------------------------------------------------------------------------------------------\n# Helpermethod to calculate the index of the parent\nfunc parent(index) -> int:\n\treturn floor((index - 1) / 2)\n