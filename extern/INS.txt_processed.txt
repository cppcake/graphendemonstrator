// Check [b]if[/b] resizing is needed based on occupancy factor\nfloat occupancy_factor = [b]([/b]float[b])[/b]size / [b]([/b]float[b])[/b]bucket_count;\n[b]if[/b] [b]([/b]occupancy_factor > 0.75[b])[/b] [b]{[/b]\n    resize[b]([/b]2[b])[/b]; // Double the hashtable size\n[b]}[/b]\n\n// Calculate hash [b]and[/b] determine bucket index\nsize_t hash = hashfkt[b]([/b]key[b])[/b];\n[b]int[/b] bucket_index = hash % num_buckets;\n\n// Insert the hash-key pair [b]int[/b]o the appropriate bucket\nbuckets[lb]bucket_index].push_back[b]([/b]std::make_pair[b]([/b]hash, key[b])[/b][b])[/b];\nsize++;\n\n[b]return[/b];\n