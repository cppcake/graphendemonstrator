keys,en,de
VERTEX,vertex,knoten
VISITED, explored,erkundet
CALL,Call,Aufruf
RETURN_VALUE_OF,Return value of,Rückgabewert von
TERMINATE,Algorithm terminated and returned: ,Algorithmus terminierte und gab zurück: 
STACK,Stack,Stackspeicher
BFS_PSEUDOCODE,"1. Create an empty sequence F and an empty queue Q\n2. Mark s as explored and add s to Q and F\n3. [b]while[/b] Q is not empty [b]do[/b]\n4. | Let v = Q.pop() \n5. | [b]for[/b] all edges (v, w) [b]do[/b] \n6. | | [b]if[/b] w is still unexplored [b]then[/b] \n7. | | | Mark w as explored and add w to the end of Q and F \n8. [b]return[/b] F","1. Erstelle leere Folge F und eine leere Warteschlange Q\n2. Markiere s als erkundet und füge s in Q und F ein\n3. [b]while[/b] Q ist nicht leer [b]do[/b]\n4.  |  Sei v = Q.pop() \n5.  |  [b]for[/b] alle Kanten (v, w) [b]do[/b] \n6.  |   |  [b]if[/b] w ist noch unerkundet [b]then[/b] \n7.  |   |   |  Markiere w als erkundet und füge w am Ende von Q und F ein \n8. [b]return[/b] F"
,,
,,
DFS_PSEUDOCODE,"1. Create empty sequences F and F' \n2. Mark s as explored and add s to F \n3. [b]for[/b] all edges (s, w) with w unexplored [b]do[/b] \n4. | F' = DFS(w) \n5. | Insert F' behind F \n6. [b]return[/b] F","1. Erstelle die leeren Folgen F und F'\n2. Markiere s als erkundet und füge s zu F hinzu\n3. [b]for[/b] alle Kanten (s, w) mit w unerkundet [b]do[/b]\n4. | F' = Tiefensuche(w) \n5. | Füge F' hinter F ein\n6. [b]return[/b] F"
DEPHT-FIRST-SEARCH,DFS,Tiefensuche
BREADTH-FIRST-SEARCH,BFS,Breitensuche
